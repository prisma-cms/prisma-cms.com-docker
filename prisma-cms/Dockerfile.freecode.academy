FROM node:18-slim as build

ARG SITE=boilerplate

ARG ROLE

ARG endpoint
ENV endpoint $endpoint

ARG API_ENDPOINT
ENV API_ENDPOINT $API_ENDPOINT

ARG ENV_MODE
ENV ENV_MODE $ENV_MODE

ARG PUBLIC_URL
ENV PUBLIC_URL $PUBLIC_URL

ARG PWA
ENV PWA $PWA

ARG DATABASE_URL
ENV DATABASE_URL $DATABASE_URL

RUN apt update
RUN apt-get install bash -y
RUN apt-get install mc -y
RUN apt-get install curl -y
RUN apt-get install gnupg -y
RUN apt-get install make -y
RUN apt-get install g++ -y
RUN apt-get install git -y

# Install Yarn
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor -o /usr/share/keyrings/yarnkey.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt update && apt-get install yarn -y

WORKDIR /www/${SITE}/

# Copy only package.json and yarn.lock to install dependencies
COPY ./${SITE}/package.json ./${SITE}/yarn.lock ./

RUN yarn install

# Copy the rest of the site files
COPY ./${SITE} .

RUN yarn deploy
RUN if [ "$ENV_MODE" = "production" ] ; then yarn build ; fi
# RUN if [ "$ROLE" = "FRONT" ] ; then echo Build front ; /usr/bin/front.sh ; else echo ROLE is $ROLE ; /usr/bin/deploy-api-schema.sh ; fi

